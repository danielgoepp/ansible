---
# Alertmanager Alert Management
# Creates/deletes Alertmanager silences using native Ansible
#
# Parameters:
#   alert_action: "disable" or "enable"
#   alertmanager_api_url: Alertmanager API URL
#   alertmanager_created_by: Creator identifier for silences
#   alert_duration_hours: Duration in hours for silence period

# DISABLE ALERTS
- name: Create Alertmanager silence
  when: alert_action == 'disable'
  block:
    - name: Calculate silence timestamps
      ansible.builtin.set_fact:
        silence_start: "{{ ansible_date_time.iso8601 }}"
        silence_end: "{{ '%Y-%m-%dT%H:%M:%SZ' | strftime((ansible_date_time.epoch | int) + (alert_duration_hours | int * 3600), utc=True) }}"

    - name: Create silence
      ansible.builtin.uri:
        url: "{{ alertmanager_api_url }}/silences"
        method: POST
        headers:
          Content-Type: application/json
        body_format: json
        body:
          matchers:
            - name: grafana_folder
              value: Goepp Alerts
              isRegex: false
              isEqual: true
          startsAt: "{{ silence_start }}"
          endsAt: "{{ silence_end }}"
          createdBy: "{{ alertmanager_created_by }}"
          comment: Maintenance window
        status_code: [200, 201]

# ENABLE ALERTS
- name: Delete Alertmanager silences
  when: alert_action == 'enable'
  block:
    - name: Get active silences
      ansible.builtin.uri:
        url: "{{ alertmanager_api_url }}/silences"
        method: GET
        return_content: true
      register: alertmanager_silences

    - name: Delete each silence
      ansible.builtin.uri:
        url: "{{ alertmanager_api_url }}/silence/{{ item.id }}"
        method: DELETE
        status_code: [200, 204]
      loop: "{{ alertmanager_silences.json }}"
      loop_control:
        label: "{{ item.id }}"
      when: item.status.state == "active"
