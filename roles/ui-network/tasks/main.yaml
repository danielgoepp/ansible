---
- name: Download unifi-easy-encrypt.sh script
  ansible.builtin.get_url:
    url: "{{ ui_network_script_url }}"
    dest: "{{ ui_network_script_path }}"
    mode: '0755'
    owner: root
    group: root

- name: Create Cloudflare credentials file
  ansible.builtin.template:
    src: cloudflare.ini.j2
    dest: "{{ ui_network_cloudflare_credentials_path }}"
    mode: '0600'
    owner: root
    group: root

- name: Run initial Let's Encrypt certificate setup
  ansible.builtin.command:
    cmd: >
      {{ ui_network_script_path }}
      --skip
      --email {{ ui_network_email }}
      --fqdn {{ ui_network_fqdn }}
      --dns-challenge
      --dns-provider cloudflare
      --dns-provider-credentials {{ ui_network_cloudflare_credentials_path }}
      --server-ip {{ ui_network_server_ip }}
      --external-dns {{ ui_network_external_dns }}
  register: ui_network_initial_setup
  changed_when: ui_network_initial_setup.rc == 0
  failed_when: ui_network_initial_setup.rc != 0

- name: Create cron job for certificate renewal
  ansible.builtin.cron:
    name: "UniFi Network Let's Encrypt certificate renewal"
    minute: "{{ ui_network_cron_minute }}"
    hour: "{{ ui_network_cron_hour }}"
    day: "{{ ui_network_cron_day }}"
    month: "{{ ui_network_cron_month }}"
    weekday: "{{ ui_network_cron_weekday }}"
    job: >
      {{ ui_network_script_path }}
      --skip
      --email {{ ui_network_email }}
      --fqdn {{ ui_network_fqdn }}
      --dns-challenge
      --dns-provider cloudflare
      --dns-provider-credentials {{ ui_network_cloudflare_credentials_path }}
      --server-ip {{ ui_network_server_ip }}
      --external-dns {{ ui_network_external_dns }}
    user: root
    state: present

- name: Set SSH public key variable
  ansible.builtin.set_fact:
    ui_network_ssh_public_key: "{{ awx_ssh_public_key | default(ssh_public_key | default('')) }}"

- name: Validate SSH public key is provided
  ansible.builtin.fail:
    msg: "SSH public key is required but not provided. Ensure ssh_public_key is defined in vault or AWX credentials."
  when: ui_network_ssh_public_key == ''

- name: Add backup server SSH public key for root
  ansible.builtin.authorized_key:
    user: root
    key: "{{ ui_network_ssh_public_key }}"
    comment: "backup server access"
