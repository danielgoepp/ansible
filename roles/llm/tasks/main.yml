---
# Disable nouveau driver before installing NVIDIA
- name: Blacklist nouveau driver
  ansible.builtin.copy:
    content: |
      blacklist nouveau
      options nouveau modeset=0
    dest: /etc/modprobe.d/blacklist-nouveau.conf
    mode: '0644'
  notify:
    - Update initramfs
    - Reboot system

# Install NVIDIA drivers
- name: Install NVIDIA drivers
  ansible.builtin.apt:
    name:
      - nvidia-driver-575-server-open
    state: present
    update_cache: true
  notify: Reboot system

# Install Docker
- name: Install Docker prerequisites
  ansible.builtin.apt:
    name:
      - apt-transport-https
      - ca-certificates
      - gnupg
      - lsb-release
    state: present

- name: Create apt keyrings directory
  ansible.builtin.file:
    path: /etc/apt/keyrings
    state: directory
    mode: '0755'

- name: Add Docker GPG key
  ansible.builtin.get_url:
    url: https://download.docker.com/linux/ubuntu/gpg
    dest: /etc/apt/keyrings/docker.asc
    mode: '0644'

- name: Add Docker repository
  ansible.builtin.shell:
    cmd: |
      set -o pipefail
      echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] \
      https://download.docker.com/linux/ubuntu \
      $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | \
      tee /etc/apt/sources.list.d/docker.list > /dev/null
    executable: /bin/bash
    creates: /etc/apt/sources.list.d/docker.list
  notify: Update apt cache

- name: Install Docker
  ansible.builtin.apt:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present
    update_cache: true

# Install Python AI/ML packages
- name: Install Python AI/ML system packages
  ansible.builtin.apt:
    name:
      - python3-numpy
      - python3-scipy
      - python3-matplotlib
      - python3-pandas
      - python3-sklearn
      - python3-opencv
      - libopenblas-dev
      - libblas-dev
      - liblapack-dev
      - libhdf5-dev
      - pkg-config
    state: present

# Create user ed
- name: Create user ed
  ansible.builtin.user:
    name: ed
    shell: /bin/bash
    create_home: true
  notify:
    - Set password for user ed
    - Create .ssh directory for user ed

# Install and configure Ollama
- name: Include Ollama installation and configuration tasks
  ansible.builtin.include_tasks: ollama.yml

# Install and configure Open WebUI (optional, controlled by variable)
- name: Include Open WebUI installation and configuration tasks
  ansible.builtin.include_tasks: openwebui.yml
  when: llm_install_openwebui | default(false)

# Install and configure Portainer (optional, controlled by variable)
- name: Include Portainer installation and configuration tasks
  ansible.builtin.include_tasks: portainer.yml
  when: llm_install_portainer | default(false)
