- name: Bootstrap adambalm GPU server for AI modeling
  hosts: adambalm
  become: true

  handlers:

    - name: reboot system
      reboot:

  tasks:
    
    # Disable nouveau driver before installing NVIDIA
    - name: blacklist nouveau driver
      copy:
        content: |
          blacklist nouveau
          options nouveau modeset=0
        dest: /etc/modprobe.d/blacklist-nouveau.conf
        mode: 0644
      register: nouveau_blacklisted

    - name: update initramfs after blacklisting nouveau
      command: update-initramfs -u
      when: nouveau_blacklisted.changed
      notify: reboot system

    # Install NVIDIA drivers
    - name: install NVIDIA drivers
      apt:
        name:
          - nvidia-driver-575-server-open
        state: present
        update_cache: true
      notify: reboot system

    # Install Docker
    - name: install Docker prerequisites
      apt:
        name:
          - apt-transport-https
          - ca-certificates
          - gnupg
          - lsb-release
        state: present

    - name: create apt keyrings directory
      file:
        path: /etc/apt/keyrings
        state: directory
        mode: 0755

    - name: add Docker GPG key
      get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /etc/apt/keyrings/docker.asc
        mode: 0644

    - name: add Docker repository
      shell: |
        echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/ubuntu $(. /etc/os-release && echo "${UBUNTU_CODENAME:-$VERSION_CODENAME}") stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
      args:
        creates: /etc/apt/sources.list.d/docker.list
      register: docker_repo_added

    - name: update apt cache after adding Docker repository
      apt:
        update_cache: yes
      when: docker_repo_added.changed

    - name: install Docker
      apt:
        name:
          - docker-ce
          - docker-ce-cli
          - containerd.io
          - docker-buildx-plugin
          - docker-compose-plugin
        state: present
        update_cache: true

    # Install Python AI/ML packages
    - name: install Python AI/ML system packages
      apt:
        name:
          - python3-numpy
          - python3-scipy
          - python3-matplotlib
          - python3-pandas
          - python3-sklearn
          - python3-opencv
          - libopenblas-dev
          - libblas-dev
          - liblapack-dev
          - libhdf5-dev
          - pkg-config
        state: present

    # Create user ed
    - name: create user ed
      user:
        name: ed
        shell: /bin/bash
        create_home: yes
      register: ed_user_created

    - name: set password for user ed
      user:
        name: ed
        password: "{{ 'changeme' | password_hash('sha512') }}"
      when: ed_user_created.changed

    - name: create .ssh directory for user ed
      file:
        path: /home/ed/.ssh
        state: directory
        owner: ed
        group: ed
        mode: 0700
      when: ed_user_created.changed
