---
- name: Upgrade Weather using Helm
  hosts: localhost
  gather_facts: false
  vars:
    helm_release_name: "weather"
    helm_chart_path: "{{ playbook_dir }}/../../k3s-config/weather/helm/weather"
    helm_namespace: "weather"
    helm_values_file: "{{ playbook_dir }}/../../k3s-config/weather/helm/weather-values-prod.yaml"
    k8s_context: "k3s-prod"
  tasks:

    - name: Get current Weather version (before upgrade)
      kubernetes.core.helm_info:
        name: "{{ helm_release_name }}"
        namespace: "{{ helm_namespace }}"
        release_state: deployed
        kube_context: "{{ k8s_context }}"
      register: weather_current_version
      ignore_errors: true

    - name: Display current Weather version
      debug:
        msg:
          - "Current Weather release:"
          - "  Name: {{ weather_current_version.status.name | default('Not installed') }}"
          - "  Version: {{ weather_current_version.status.chart | default('Unknown') }}"
          - "  App Version: {{ weather_current_version.status.app_version | default('Unknown') }}"
          - "  Status: {{ weather_current_version.status.status | default('Unknown') }}"
      when: weather_current_version.status is defined

    - name: Display installation status if not found
      debug:
        msg: "Weather release '{{ helm_release_name }}' not found in namespace '{{ helm_namespace }}'"
      when: weather_current_version.status is not defined

    - name: Upgrade Weather using Helm
      kubernetes.core.helm:
        name: "{{ helm_release_name }}"
        chart_ref: "{{ helm_chart_path }}"
        namespace: "{{ helm_namespace }}"
        values_files:
          - "{{ helm_values_file }}"
        state: present
        kube_context: "{{ k8s_context }}"
        wait: true
        wait_timeout: "300s"
      register: weather_upgrade_result

    - name: Get updated Weather version (after upgrade)
      kubernetes.core.helm_info:
        name: "{{ helm_release_name }}"
        namespace: "{{ helm_namespace }}"
        release_state: deployed
        kube_context: "{{ k8s_context }}"
      register: weather_updated_version

    - name: Display updated Weather version
      debug:
        msg:
          - "Updated Weather release:"
          - "  Name: {{ weather_updated_version.status.name }}"
          - "  Version: {{ weather_updated_version.status.chart }}"
          - "  App Version: {{ weather_updated_version.status.app_version }}"
          - "  Status: {{ weather_updated_version.status.status }}"
          - "  Revision: {{ weather_updated_version.status.revision }}"

    - name: Display upgrade summary
      debug:
        msg:
          - "Weather upgrade completed successfully!"
          - "{% if weather_current_version.status is defined %}Previous version: {{ weather_current_version.status.chart | default('Unknown') }}{% endif %}"
          - "Current version: {{ weather_updated_version.status.chart }}"
          - "Upgrade performed: {{ weather_upgrade_result.changed }}"